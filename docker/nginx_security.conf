# nginx security snippet for reversing proxying the WebCall app
# Place this file in your nginx conf and include it in the server block.
# Example: include /etc/nginx/conf.d/webcall_security.conf;

# Always add these headers
add_header X-Content-Type-Options "nosniff" always;
add_header X-Frame-Options "DENY" always;
add_header Referrer-Policy "no-referrer" always;
add_header X-XSS-Protection "1; mode=block" always;

# HSTS: enable only when serving over HTTPS
# The following line enforces HTTPS for one year and includes subdomains
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# Content-Security-Policy: conservative default
# WARNING: this is a starting point. You should tailor CSP to your app (move inline scripts to files or use nonces)
# For example, to allow only scripts from own origin and disallow inline scripts:
# add_header Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'none'; base-uri 'self'; connect-src 'self' wss:; img-src 'self' data:; style-src 'self' 'unsafe-inline'" always;

add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; object-src 'none'; base-uri 'self'; connect-src 'self' wss:; img-src 'self' data:; style-src 'self' 'unsafe-inline'" always;

# Deny access to sensitive files
location ~* (?:\.|\b)(?:env|git|htpasswd|docker-compose\.yml)$ {
    deny all;
    return 404;
}

# Also deny access to hidden files and directories (starting with .)
location ~ (^|/)[.] {
    deny all;
    return 404;
}

# Recommended: add a location for static files with efficient caching
location /static/ {
    alias /app/app/presentation/static/; # adjust to your container static path
    tcp_nopush on;
    sendfile on;
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    add_header Cache-Control "public, max-age=31536000, immutable";
}

# Proxy pass to uvicorn/gunicorn upstream
location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # WebSocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    proxy_pass http://127.0.0.1:8000; # change to your upstream
}

# small helper for Connection header when proxying WebSockets
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
